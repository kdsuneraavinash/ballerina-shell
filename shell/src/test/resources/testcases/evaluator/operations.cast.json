[
  {
    "description": "Define types.",
    "code": "type Person record { string name; int age; }; type Employee record { string name; int age; int empNo; }; type Department record { string code; };"
  },
  {
    "description": "Define employee.",
    "code": "Employee employee = {name: \"Jane Doe\", age: 25, empNo: 1};"
  },
  {
    "description": "Cas employee to person.",
    "code": "Person person = <Person>employee; person.name",
    "expr": "Jane Doe"
  },
  {
    "description": "Recast back to employee.",
    "code": "Employee employeeTwo = <Employee>person; employeeTwo.name",
    "expr": "Jane Doe"
  },
  {
    "description": "Cast anydata to int.",
    "code": "anydata value = 100; int i = <int>value; i",
    "expr": "100"
  },
  {
    "description": "Cast anydata to float.",
    "code": "float f = <float>value; f",
    "expr": "100.0"
  },
  {
    "description": "Cast anydata to a union.",
    "code": "float|boolean u = <float|boolean>value; u",
    "expr": "100.0"
  },
  {
    "description": "Assign employee to value.",
    "code": "value = employee;"
  },
  {
    "description": "Casting to incorrect type.",
    "code": "Department department = <Department>value;",
    "error": "InvokerException",
    "stdout": "Exception occurred: error(\"{ballerina}TypeCastError\",message=\"incompatible types: 'Employee' cannot be cast to 'Department'\")\n"
  }
]
