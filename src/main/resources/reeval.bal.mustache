import ballerina/io;
{{#imports}}
    {{{.}}}
{{/imports}}

{{#moduleDeclarations}}
    {{{.}}}
{{/moduleDeclarations}}
{{#variableDeclarations}}
    {{{.}}}
{{/variableDeclarations}}

function __stmts__() {
{{#statementsAndExpressions}}
    {{{.}}}
{{/statementsAndExpressions}}
}

function __new_stmt__() returns error? {
{{{newStatement}}}
}

any|error __reserved__ = ();
type __NoExpression__ record {};
type __NoExpressionError__ error<__NoExpression__>;

function __run__() returns string|error {
    __stmts__();

    io:println("\n[[__START__]]");
    check  __new_stmt__();
    any|error expr = {{{newExpression}}}; // ==== New expression
    any value = checkpanic expr;
    string output = io:sprintf("%s", value);
    return output;
}

public function main() {
    string|error result = trap __run__();
    if (result is string) {
        io:println(result);
    } else if (result is __NoExpressionError__) {
        // ignore
    }else {
        io:println("\u{001b}[33;1mException occurred: ", result.message(), "\u{001b}[0m");
    }
    io:println("[[__END__]]\n");
}
