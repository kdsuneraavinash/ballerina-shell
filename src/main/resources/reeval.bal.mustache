import ballerina/io;

// Imports
{{#imports}}
{{{.}}}
{{/imports}}

any|error __reserved__ = ();

// Module member declaration
{{#moduleDeclarations}}
{{{.}}}
{{/moduleDeclarations}}

// Variable declarations
{{#variableDeclarations}}
{{{.}}}
{{/variableDeclarations}}

// Statements and Expressions
function __stmts__() returns error? {
{{#statementsAndExpressions}}
    {{{.}}}
{{/statementsAndExpressions}}
}

// No Expression handlers
type __NoExpression__ record {};
type __NoExpressionError__ error<__NoExpression__>;

function __run__() returns string|error {
    check __stmts__();
    any|error expr = {{{newExpression}}}; // New expression
    any value = checkpanic expr;
    string output = io:sprintf("%s", value);
    return output;
}

public function main() {
    string|error result = trap __run__();
    if (result is string) {
        io:println(result);
    } else if (result is __NoExpressionError__) {
        // ignore
    }else {
        io:println("\u{001b}[33;1mException occurred: ", result.message(), "\u{001b}[0m");
    }
}
