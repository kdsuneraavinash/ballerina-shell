plugins {
    id 'java'
}

group 'io.ballerina'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs "${rootProject.projectDir}/libs"
    }
}

dependencies {
    implementation project(":shell")

    implementation(group: 'info.picocli', name: 'picocli', version: '4.5.2')
    annotationProcessor 'info.picocli:picocli-codegen:4.5.2'

    implementation(group: 'org.jline', name: 'jline', version: '3.17.1')
    testImplementation('org.testng:testng:6.14.3')
}

compileJava {
    doFirst {
        options.compilerArgs += [
                "-Aproject=${project.group}/${project.name}",
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

def mainCliClass = 'io.ballerina.shell.cli.ReplShellApplication'
task run(type: JavaExec) {
    main = mainCliClass
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { attributes 'Main-Class': mainCliClass }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

ext.moduleName = 'io.ballerina.shell.cli'
